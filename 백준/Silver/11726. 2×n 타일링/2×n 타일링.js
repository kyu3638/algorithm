const filePath = process.platform === 'linux' ? '/dev/stdin' : './11726.txt';
let input = require('fs').readFileSync(filePath).toString().trim();

// dp 문제의 가정
// 1. 큰 문제를 작은 문제로 나눌 수 있다.
// 2. 작은 문제에서 구한 정답은 그것을 포함하는 큰 문제에서도 동일하다.

// 그렇다면 이 문제는 어떻게 풀 수 있을까?
// 2 * n 크기의 직사각형이니까..
// n이 1일 때
// n이 2일 때..
// n이 ..일 때의 규칙을 찾고 작은 문제가 큰 문제를 풀 수 있도록 하면 되겠다.
// 아마 n이 홀수 개 일 때와 짝수 개 일 때는 차이가 있을 듯 하다.

// 먼저 n = 1, 2 * 1 크기의 직사각형일 때는 가로로 둘 수 없으니까 한가지일 것
// n = 2, 2 * 2 크기의 직사각형일 때는 가로로 둘 수 있으니까 가로로만 둘 때 세로로만 둘 때 2가지가 있을 것
// n = 3, 2 * 3 크기의 직사각형일 때는
// - 세로로만 두는 경우 한가지
// - 가로 2 세로 1로 두는 경우 두가지 해서 총 3가지
// n = 4, 2 * 4 크기의 직사각형일 때는
// - 세로로만 두는 경우 한가지
// - 가로 2, 세로 2로 두는 경우 세가지
// - 가로로만 두는 경우 한가지 해서 총 5가지
// 1,2,3,5,...
const n = Number(input);
const arr = [...Array(n + 1).fill(0)];
function dp(n) {
  if (n === 1) return 1;
  if (n === 2) return 2;
  if (arr[n] !== 0) return arr[n];
  return (arr[n] = (dp(n - 1) + dp(n - 2)) % 10007);
}
console.log(dp(n));
