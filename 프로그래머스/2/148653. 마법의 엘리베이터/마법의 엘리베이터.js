function solution(storey) {
    // 민수는 마법의 엘리베이터를 만들었음
    // 마법의 엘리베이터에는 -1, +1, -10, +10, -100, +100 등과 같이 절댓값이 10c (c ≥ 0 인 정수) 형태인 정수들이 적힌 버튼이 있음
    // 단, 엘리베이터가 위치해 있는 층과 버튼의 값을 더한 결과가 0보다 작으면 엘리베이터는 움직이지 않습니다
    // 0층이 가장 아래층이며 엘리베이터는 현재 민수가 있는 층에 있음
    // 항상 최소한의 버튼을 눌러서 이동하려고 합니다
    // 민수가 어떤 층에서 엘리베이터를 타고 0층으로 내려가는데 필요한 마법의 돌의 최소 개수를 알고 싶습니다
    // 10^0 +-1, 10^1 +-10, 10^2 +-100, 10^3 +-1000, 10^4 +-10000,
    // 10^5 +-100000, 10^6 +-1000000, 10^7 +-10000000, 10^8 +-100000000
    // 2554 -> 1의 자리가 6미만이므로 4번, 10의자리, 100의자리 5번씩 10번, 1000의자리 2번
    var answer = 0;
    // 층수를 배열의 형태로 바꿈
    storey = String(storey).split('').map(v=>Number(v));
    // 가장 높은 자리에서 한자리 높아질 수 있으므로 첫번째 자리에 0을 임의로 만들어 줌
    storey.unshift(0);
    // 각 자리수의 층에서 몇번 이동이 필요한지
    for(let i = storey.length - 1; i >= 0; i--){
        // 밑에 자리에서 하나가 올림이 되어 혹시 10이 된 경우에
        if(storey[i] === 10){
            // 우선 그 자리수에서는 10을 빼주고
            storey[i] -= 10;
            // 그 윗자리수에 +1 해줌
            storey[i-1] += 1;
            // 이번 자리수에서는 계산할 것 없으므로 continue;
            continue;
        }
        // 자리수가 5보다 큰 경우와 작은 경우 구분
        if(storey[i] > 5) {
            answer += 10 - storey[i];
            storey[i-1] += 1;
        } else if(storey[i] < 5){
            answer += storey[i];
        } else {
            if(storey[i-1] >= 5){
                answer += 10 - storey[i];
                storey[i-1] += 1;
            } else {
                answer += storey[i];
            }
        }
    }
    return answer;
}